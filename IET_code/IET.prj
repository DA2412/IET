<deployment-project plugin="plugin.ezdeploy" plugin-version="1.0">
  <configuration build-checksum="2441916419" file="/home/abate/Documents/gitProj/IET_Inverse_Equilibrium_Tool/IET.prj" location="/home/abate/Documents/gitProj/IET_Inverse_Equilibrium_Tool" name="IET" preferred-package-location="/mnt/N41a/home/abate/\\raserver.igi.cnr.it\disk x\home\abate\2020_GitHub\IET_Master\IET_code\IET_StandAloneWin_v1\for_redistribution" target="target.ezdeploy.standalone" target-name="Application Compiler">
    <param.appname>IET</param.appname>
    <param.icon>${PROJECT_ROOT}/IET_resources/icon.ico</param.icon>
    <param.icons>
      <file>${PROJECT_ROOT}/IET_resources/icon_48.png</file>
      <file>${PROJECT_ROOT}/IET_resources/icon_32.png</file>
      <file>${PROJECT_ROOT}/IET_resources/icon_24.png</file>
      <file>${PROJECT_ROOT}/IET_resources/icon_16.png</file>
    </param.icons>
    <param.version>1.1.2</param.version>
    <param.authnamewatermark>Domenico Abate</param.authnamewatermark>
    <param.email>domenico.abate@igi.cnr.it</param.email>
    <param.company>Consorzio RFX</param.company>
    <param.summary>The Inverse Equilibrium Tool allows to design plasma equilibria</param.summary>
    <param.description>IET allows to compute the coil currents needed to obtain a predetermined plasma shape with defined plasma global parameters (i.e. total plasma current and total poloidal magnetic flux at the boundary) by solving a constrained minimization problem. 
The IET computational tool is constituted by three main modules, each with a dedicated GUI. IET was validated for both ITER-like plasma configurations and experimental plasmas in the RFX-mod experiment.  The journal publication of IET code can be found here: https://iopscience.iop.org/article/10.1088/1361-6587/ab3f09

Copyright (C) 2019 Domenico Abate - domenico.abate@igi.cnr.it

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see &lt;https://www.gnu.org/licenses/&gt;.</param.description>
    <param.screenshot>${PROJECT_ROOT}/logo_IET.png</param.screenshot>
    <param.guid />
    <param.installpath.string>/Consorzio_RFX/IET/</param.installpath.string>
    <param.installpath.combo>option.installpath.user</param.installpath.combo>
    <param.logo />
    <param.install.notes>In the following directions, replace MCR_ROOT by the directory where the MATLAB Runtime is installed on the target machine.

(1) Set the environment variable XAPPLRESDIR to this value:

    MCR_ROOT/v92/X11/app-defaults


(2) If the environment variable LD_LIBRARY_PATH is undefined, set it to the concatenation of the following strings:

    MCR_ROOT/v92/runtime/glnxa64:
    MCR_ROOT/v92/bin/glnxa64:
    MCR_ROOT/v92/sys/os/glnxa64:
    MCR_ROOT/v92/sys/opengl/lib/glnxa64

    If it is defined, set it to the concatenation of these strings:

    ${LD_LIBRARY_PATH}: 
    MCR_ROOT/v92/runtime/glnxa64:
    MCR_ROOT/v92/bin/glnxa64:
    MCR_ROOT/v92/sys/os/glnxa64:
    MCR_ROOT/v92/sys/opengl/lib/glnxa64</param.install.notes>
    <param.target.install.notes>In the following directions, replace MR/v98 by the directory on the target machine where MATLAB is installed, or MR by the directory where the MATLAB Runtime is installed.

(1) Set the environment variable XAPPLRESDIR to this value:

MR/v98/X11/app-defaults


(2) If the environment variable LD_LIBRARY_PATH is undefined, set it to the following:

MR/v98/runtime/glnxa64:MR/v98/bin/glnxa64:MR/v98/sys/os/glnxa64:MR/v98/sys/opengl/lib/glnxa64

If it is defined, set it to the following:

${LD_LIBRARY_PATH}:MR/v98/runtime/glnxa64:MR/v98/bin/glnxa64:MR/v98/sys/os/glnxa64:MR/v98/sys/opengl/lib/glnxa64</param.target.install.notes>
    <param.intermediate>${PROJECT_ROOT}/IET_StandAloneLinux/for_testing</param.intermediate>
    <param.files.only>${PROJECT_ROOT}/IET_StandAloneLinux/for_redistribution_files_only</param.files.only>
    <param.output>${PROJECT_ROOT}/IET_StandAloneLinux/for_redistribution</param.output>
    <param.logdir>${PROJECT_ROOT}/IET_StandAloneLinux</param.logdir>
    <param.enable.clean.build>false</param.enable.clean.build>
    <param.user.defined.mcr.options />
    <param.target.type>subtarget.standalone</param.target.type>
    <param.support.packages />
    <param.web.mcr>true</param.web.mcr>
    <param.package.mcr>false</param.package.mcr>
    <param.no.mcr>false</param.no.mcr>
    <param.web.mcr.name>IET_Installer_web</param.web.mcr.name>
    <param.package.mcr.name>IET_installer</param.package.mcr.name>
    <param.no.mcr.name>MyAppInstaller_app</param.no.mcr.name>
    <param.windows.command.prompt>false</param.windows.command.prompt>
    <param.create.log>false</param.create.log>
    <param.log.file>IET_log</param.log.file>
    <param.native.matlab>false</param.native.matlab>
    <param.checkbox>false</param.checkbox>
    <param.example />
    <param.help.text>Syntax 
	  -? 
	 
 Input Arguments 
	 -?  print help on how to use the application 
	 input arguments</param.help.text>
    <unset>
      <param.guid />
      <param.installpath.string />
      <param.installpath.combo />
      <param.logo />
      <param.enable.clean.build />
      <param.user.defined.mcr.options />
      <param.target.type />
      <param.support.packages />
      <param.web.mcr />
      <param.package.mcr />
      <param.no.mcr />
      <param.no.mcr.name />
      <param.windows.command.prompt />
      <param.create.log />
      <param.native.matlab />
      <param.checkbox />
      <param.example />
    </unset>
    <fileset.main>
      <file>${PROJECT_ROOT}/IET.mlapp</file>
    </fileset.main>
    <fileset.resources>
      <file>${PROJECT_ROOT}/IET.mlapp</file>
      <file>${PROJECT_ROOT}/IET_EQUILIBRIUM_TOOL</file>
      <file>${PROJECT_ROOT}/IET_OPTIMIZATION_TOOL</file>
      <file>${PROJECT_ROOT}/IET_SHAPING_TOOL</file>
    </fileset.resources>
    <fileset.package />
    <fileset.depfun />
    <build-deliverables>
      <file location="${PROJECT_ROOT}/IET_StandAloneLinux/for_testing" name="IET" optional="false">/home/abate/Documents/gitProj/IET_Inverse_Equilibrium_Tool/IET_StandAloneLinux/for_testing/IET</file>
      <file location="${PROJECT_ROOT}/IET_StandAloneLinux/for_testing" name="readme.txt" optional="true">/home/abate/Documents/gitProj/IET_Inverse_Equilibrium_Tool/IET_StandAloneLinux/for_testing/readme.txt</file>
      <file location="${PROJECT_ROOT}/IET_StandAloneLinux/for_testing" name="splash.png" optional="false">/home/abate/Documents/gitProj/IET_Inverse_Equilibrium_Tool/IET_StandAloneLinux/for_testing/splash.png</file>
      <file location="${PROJECT_ROOT}/IET_StandAloneLinux/for_testing" name="run_IET.sh" optional="false">/home/abate/Documents/gitProj/IET_Inverse_Equilibrium_Tool/IET_StandAloneLinux/for_testing/run_IET.sh</file>
    </build-deliverables>
    <workflow />
    <matlab>
      <root>/usr/local/MATLAB/R2020a</root>
      <toolboxes>
        <toolbox name="matlabcoder" />
        <toolbox name="embeddedcoder" />
        <toolbox name="gpucoder" />
        <toolbox name="fixedpoint" />
        <toolbox name="matlabhdlcoder" />
        <toolbox name="neuralnetwork" />
      </toolboxes>
      <toolbox>
        <matlabcoder>
          <enabled>true</enabled>
        </matlabcoder>
      </toolbox>
      <toolbox>
        <embeddedcoder>
          <enabled>true</enabled>
        </embeddedcoder>
      </toolbox>
      <toolbox>
        <gpucoder>
          <enabled>true</enabled>
        </gpucoder>
      </toolbox>
      <toolbox>
        <fixedpoint>
          <enabled>true</enabled>
        </fixedpoint>
      </toolbox>
      <toolbox>
        <matlabhdlcoder>
          <enabled>true</enabled>
        </matlabhdlcoder>
      </toolbox>
      <toolbox>
        <neuralnetwork>
          <enabled>true</enabled>
        </neuralnetwork>
      </toolbox>
    </matlab>
    <platform>
      <unix>true</unix>
      <mac>false</mac>
      <windows>false</windows>
      <win2k>false</win2k>
      <winxp>false</winxp>
      <vista>false</vista>
      <linux>true</linux>
      <solaris>false</solaris>
      <osver>5.3.0-46-generic</osver>
      <os32>false</os32>
      <os64>true</os64>
      <arch>glnxa64</arch>
      <matlab>true</matlab>
    </platform>
  </configuration>
</deployment-project>